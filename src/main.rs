mod cve_struct;
mod constants;

use std::error::Error;
use tokio;
use crate::cve_struct::CVES;

async fn get_cves_from_redhat() -> Result<CVES, Box<dyn Error>> {
    let url = constants::cve_url;
    let result = reqwest::get(url).await?.text().await?;
    let cve_collection:CVES = serde_json::from_str(&result)?;

    Ok(cve_collection)
}

async fn get_images_from_cluster(cves:CVES){
    println!("Result object: {:?}", cves);
}

#[tokio::main]
async fn main() -> Result<(), Box<dyn Error>> {
    let cves = get_cves_from_redhat().await;
    match cves {
        Ok(cves) => {
            get_images_from_cluster(cves).await;
        }
        Err(err) => {
            println!("Could not read the cves: {:?}", err);
        }
    }

    Ok(())
}