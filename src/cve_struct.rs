use serde_derive::Deserialize;
use serde_derive::Serialize;
use serde_json::Value;

pub type CVES = Vec<CVE>;

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CVE {
    #[serde(rename = "CVE")]
    pub cve: String,
    pub severity: Option<String>,
    #[serde(rename = "public_date")]
    pub public_date: String,
    pub advisories: Vec<String>,
    pub bugzilla: String,
    #[serde(rename = "bugzilla_description")]
    pub bugzilla_description: String,
    #[serde(rename = "cvss_score")]
    pub cvss_score: Value,
    #[serde(rename = "cvss_scoring_vector")]
    pub cvss_scoring_vector: Value,
    #[serde(rename = "CWE")]
    pub cwe: Option<String>,
    #[serde(rename = "affected_packages")]
    pub affected_packages: Vec<String>,
    #[serde(rename = "resource_url")]
    pub resource_url: String,
    #[serde(rename = "cvss3_scoring_vector")]
    pub cvss3_scoring_vector: Option<String>,
    #[serde(rename = "cvss3_score")]
    pub cvss3_score: Option<String>,
}
